(Iter 0) Best = Solution: cost=[-1042.0], size=[178], elements=[61, 257, 259, 320, 379, 167, 88, 121, 356, 234, 280, 351, 72, 73, 357, 195, 242, 89, 126, 285, 288, 0, 168, 174, 138, 29, 395, 282, 203, 44, 32, 169, 178, 310, 160, 341, 66, 337, 185, 179, 303, 20, 175, 74, 251, 355, 64, 11, 108, 223, 49, 228, 144, 120, 92, 194, 219, 283, 102, 240, 313, 274, 224, 30, 1, 387, 229, 25, 7, 279, 76, 305, 33, 329, 222, 79, 276, 354, 381, 359, 246, 105, 98, 273, 115, 116, 9, 118, 124, 377, 342, 378, 211, 275, 383, 3, 372, 10, 210, 36, 317, 256, 278, 52, 345, 318, 233, 90, 243, 237, 59, 348, 209, 22, 21, 91, 71, 63, 149, 290, 197, 244, 374, 4, 232, 338, 236, 136, 8, 343, 213, 291, 80, 186, 339, 119, 268, 54, 135, 353, 141, 2, 87, 294, 110, 55, 107, 309, 363, 48, 347, 346, 65, 314, 17, 150, 311, 316, 201, 241, 114, 170, 371, 146, 325, 62, 265, 254, 113, 360, 187, 364, 69, 86, 53, 231, 190, 34]
OK: inst_400_balanceado.dat | STD_a0.20_FIRST | f=1042.000000 | best@1806s (it 1) | t=1806s
(Iter 0) Best = Solution: cost=[-1047.0], size=[178], elements=[318, 383, 290, 32, 116, 288, 52, 194, 179, 278, 74, 119, 141, 283, 203, 21, 310, 87, 89, 222, 10, 108, 121, 90, 160, 138, 294, 197, 7, 168, 229, 175, 243, 71, 354, 55, 211, 186, 4, 285, 2, 374, 259, 54, 36, 8, 359, 357, 33, 268, 126, 30, 305, 44, 219, 210, 233, 377, 275, 240, 61, 102, 110, 236, 209, 337, 356, 242, 25, 120, 29, 381, 256, 341, 320, 351, 59, 339, 257, 185, 91, 273, 174, 49, 98, 76, 118, 378, 0, 3, 80, 353, 355, 317, 223, 9, 251, 276, 144, 224, 136, 22, 1, 124, 66, 244, 338, 115, 342, 92, 395, 107, 309, 11, 246, 64, 303, 228, 343, 280, 195, 149, 234, 274, 167, 135, 279, 20, 232, 313, 372, 329, 213, 345, 79, 379, 282, 348, 237, 105, 178, 72, 291, 63, 387, 169, 88, 73, 65, 231, 190, 254, 241, 86, 347, 325, 17, 113, 363, 371, 170, 314, 34, 146, 316, 62, 150, 69, 48, 201, 53, 68, 360, 265, 364, 311, 187, 346]
OK: inst_400_balanceado.dat | STD_a0.60_FIRST | f=1047.000000 | best@1800s (it 1) | t=1800s
(Iter 0) Best = Solution: cost=[-1028.0], size=[164], elements=[234, 282, 64, 387, 66, 167, 174, 76, 351, 316, 0, 288, 242, 265, 20, 303, 285, 11, 371, 79, 346, 144, 68, 185, 33, 259, 194, 169, 257, 49, 179, 341, 74, 279, 310, 395, 160, 72, 138, 240, 222, 325, 65, 102, 73, 311, 170, 229, 320, 251, 354, 223, 178, 313, 280, 203, 364, 276, 88, 29, 224, 195, 92, 48, 305, 108, 25, 168, 309, 120, 61, 337, 379, 7, 357, 329, 228, 359, 89, 219, 246, 146, 44, 381, 126, 283, 34, 356, 274, 30, 201, 121, 1, 175, 10, 314, 32, 69, 355, 241, 62, 211, 9, 275, 4, 87, 378, 338, 124, 244, 256, 294, 197, 105, 374, 243, 273, 209, 342, 36, 233, 186, 3, 59, 348, 345, 236, 113, 98, 52, 116, 318, 232, 278, 114, 347, 71, 63, 90, 115, 22, 237, 187, 377, 17, 383, 136, 210, 290, 21, 372, 86, 91, 55, 317, 231, 190, 149, 150, 118, 363, 277, 301, 254]
OK: inst_400_balanceado.dat | STD_a0.20_BEST | f=1028.000000 | best@1806s (it 1) | t=1806s
(Iter 0) Best = Solution: cost=[-1045.0], size=[179], elements=[167, 379, 313, 242, 44, 144, 309, 61, 305, 310, 280, 279, 229, 11, 30, 240, 257, 7, 194, 49, 285, 224, 251, 234, 357, 354, 179, 288, 320, 259, 102, 228, 303, 381, 274, 351, 169, 222, 359, 185, 92, 178, 32, 10, 337, 33, 64, 66, 174, 121, 276, 29, 76, 108, 387, 72, 282, 1, 329, 195, 138, 355, 0, 219, 246, 341, 168, 20, 160, 395, 74, 283, 79, 149, 356, 120, 374, 232, 3, 25, 91, 124, 105, 175, 210, 233, 383, 126, 211, 55, 136, 87, 273, 36, 294, 98, 236, 22, 338, 80, 377, 317, 244, 9, 186, 278, 256, 90, 71, 59, 372, 63, 342, 115, 52, 275, 107, 318, 4, 223, 291, 118, 197, 243, 8, 119, 209, 378, 343, 15, 141, 135, 353, 213, 290, 348, 339, 2, 21, 345, 54, 268, 110, 116, 237, 89, 203, 34, 201, 73, 88, 68, 190, 65, 254, 316, 114, 113, 86, 314, 53, 265, 231, 311, 69, 371, 364, 150, 48, 360, 347, 187, 363, 325, 346, 17, 241, 170, 146]
OK: inst_400_balanceado.dat | SAMPLED_p64_FIRST | f=1045.000000 | best@1802s (it 1) | t=1802s
(Iter 0) [alpha=0.5] Best = Solution: cost=[-1049.0], size=[180], elements=[387, 168, 305, 329, 257, 256, 178, 354, 343, 342, 213, 320, 184, 72, 118, 224, 268, 381, 288, 233, 273, 2, 124, 76, 291, 54, 116, 49, 339, 179, 71, 351, 259, 66, 61, 345, 74, 232, 175, 126, 211, 309, 167, 10, 240, 20, 236, 229, 55, 63, 59, 283, 102, 36, 149, 274, 52, 246, 30, 120, 313, 303, 219, 80, 290, 337, 160, 383, 355, 141, 318, 79, 138, 356, 357, 186, 21, 119, 8, 135, 3, 185, 1, 379, 194, 29, 242, 98, 338, 353, 174, 32, 144, 209, 136, 64, 223, 282, 91, 378, 33, 90, 285, 25, 197, 0, 107, 92, 121, 228, 395, 89, 374, 251, 222, 275, 11, 278, 73, 310, 244, 237, 243, 372, 280, 7, 4, 210, 279, 234, 294, 359, 341, 105, 276, 9, 115, 195, 110, 169, 108, 348, 44, 203, 22, 317, 87, 88, 377, 113, 170, 65, 190, 114, 34, 146, 364, 68, 241, 311, 231, 150, 187, 363, 347, 316, 265, 360, 69, 325, 86, 314, 48, 53, 346, 371, 201, 254, 17, 62]
OK: inst_400_balanceado.dat | REACTIVE_FIRST | f=1049.000000 | best@1800s (it 1) | t=1800s
Resultados salvos em: out_inst_400_balanceado.csv
